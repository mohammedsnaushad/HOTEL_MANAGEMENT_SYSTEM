Home.js

import React, { Component } from 'react'
import {Navigation} from './Navigation'

export class Home extends Component {
    constructor(props) {
        super(props)

        this.state = {
            
        }
    }

    render() {
        return (
            
            <div>
                <Navigation/>
                  <h2 className="m-3 d-flex justify-content-center color-white">Hayat Residency</h2>
                     <div className="gallery-images">
                        <div className='gallery-images-segment'>

                        </div>
                         <div className='gallery-images-segment'>

                        </div>
                        <div className='gallery-images-segment'>

                        </div>
                    </div>  
                  <p className='hometext'>    
                 
                    Explore Our Smart Collective of Business & Leisure Hotels with Added Assurance of Safety.

                    Experience a Vibrant Stay at our Contemporary Hayat Residency Road. Clean And Safe Rooms.

                    Member Special Benefits. Physical Distancing Norms.

                    Email: info@hotelhayatresorts.com, travel@hotelhayatresorts.com, snkrdm@gmail.com

                    Phone: +91 562 2230 161, 162, 163

                    Mobile: +91 7830 050 001, 9899 313 111, 9811 024 064

                    Fax: +91 562 2230 164

                    Address: Hotel Hayat Resorts Near Shilp Gram, Taj Mahal(Eastern Gate), Agra 282 001 (India)
                    </p>  
            </div>
        )
    }
}

export default Home
--------------------------------------------------------------------------------------------------------------------------
App.js

import './App.css';
import UserLogin from './UserLogin'
import {Home} from './Home';
import {SetRoomRates} from './SetRoomRates';
import {RoomManagement} from './RoomManagement';
import {Navigation} from './Navigation';
import Payment from './Payment'
import Reservation from './Reservation'
import {Booking} from './Booking'
import {BrowserRouter as Router, Route , Routes} from 'react-router-dom';
import SearchRoom from './SearchRoom';
import UserRegistration from './UserRegistration';


function App() {
  return (
    <div className="App">
      <div className='text'>
      <div className='image'>
     <Router>
       <div className="container" >
       <h2 className="main-heading">
          Welcome to Grand Hyatt
      </h2>     

      {/* <Navigation/> */}
      {/* <UserLogin/> */}
      {/* <UserRegisteration/> */}
     
     <Routes>
       <Route path='/' element={<UserLogin/>} />
       <Route path='/Home' element={<Home/>} />
       <Route path='/SetRoomRates' element={<SetRoomRates/>}/>
       <Route path='/RoomManagement' element={<RoomManagement/>}/>
       <Route path='/Reservation' element={<Reservation/>}/>
       <Route path='/Payment' element= {<Payment/>} />
       <Route path='/SearchRoom' element={<SearchRoom/>}/>
       <Route path='/Booking' element={<Booking/>}/>
       <Route path='/UserRegistration' element={<UserRegistration/>} />
     </Routes>
    </div>
    </Router>
    </div>
    </div>
    </div>
  );
}

export default App;
---------------------------------------------------------------------------------------
Navigation

import React, { Component } from 'react';
import {NavLink} from 'react-router-dom';
import {Navbar,Nav} from 'react-bootstrap';

export class Navigation extends Component {
    render() {
        return (
            <Navbar  expand="lg">
            <Navbar.Toggle aria-controls="basic-navbar-nav"/>
            <Navbar.Collapse id="basic-navbar-nav">
            <Nav>
            <NavLink className="d-inline p-2 bg-dark text-white" to="/Home">
                Home
            </NavLink>
            <NavLink className="d-inline p-2 bg-dark text-white" to="/SearchRoom">
                SearchRoom
            </NavLink>
            {/* <NavLink className="d-inline p-2 bg-dark text-white" to="/setroomrates">
                Add-Room
            </NavLink>
            <NavLink className="d-inline p-2 bg-dark text-white" to="/roommanagement">
                Manage-Room
            </NavLink>  */}
            {/* <NavLink className="d-inline p-2 bg-dark text-white" to="/Booking">
                Booking
            </NavLink>
            <NavLink className="d-inline p-2 bg-dark text-white" to="/Reservation">
                Reservation
            </NavLink> */}
            <NavLink className="d-inline p-2 bg-dark text-white" to="/Payment">
                Payment
            </NavLink>
            <NavLink className="d-inline p-2 bg-dark text-white" to="/">
                Logout
            </NavLink>
            {/* <Link className="btnlink" to="/"><b>Logout</b></Link> */}
            </Nav>
            </Navbar.Collapse>
        </Navbar>
        )
    }
}



export default Navigation;
-------------------------------------------------------------------------------------------------
UserLogin

import { useState } from "react";
import axios from "axios";
import {useNavigate ,Link} from "react-router-dom";

export default function UserLogin() {

    let navigate = useNavigate();
    const [UserName, setUserName] = useState('');
    const [Password, setPassword] = useState('');
    const [formErrors, setFormErrors] = useState({});
    const [Allok, setAllok] = useState(false);
    const [LoginResponse, setLoginResponse] = useState('');


    const validate = (out) => {
        const errors = {};
        setAllok(true);
        console.log(Allok);
        if (!out.UserName) {
            errors.username = "Username is required!";
            setAllok(false);
        }
        if (!out.Password) {
            errors.password = "Password is required";
            setAllok(false);
        }
        return errors;
    };

    async function Submit(e) {
        console.log(Allok);
        const out = {
            "UserName": UserName,
            "Password": Password
        };
        setFormErrors(validate(out));
        console.log(Allok);
        console.log(formErrors)
        console.log(out);
        if (Allok) {
            axios.get("http://localhost:24396/api/userregistration", { params: out }
            ).then((response) => {
                console.log(response.data[0]);
                console.log(response.status);
                if (response.data[0].matches === 0) {
                    setLoginResponse("No Account with that Username or password..");
                }
                else {
                    setLoginResponse("Account Found");
                    console.log(response.status)
                    localStorage.setItem("UserName", UserName);
                    localStorage.setItem("UserLogin", true);
                    navigate('/Home');
                }

            }).catch(function (error) {
                alert(error.message);
            })
        }
        e.preventDefault();
    }
    return (
        <>
            <div className="login">
                <form className="user-form">
                    <h2>LOGIN</h2>
                    <div >
                        <label>Username <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.username}</label>}
                    </div>
                    <input required type="text" placeholder="Username" onChange={event => setUserName(event.target.value)}></input>
                    <div >
                        <label>Password <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.password}</label>}
                    </div>
                    <input required type="password" placeholder="Password" onChange={event => setPassword(event.target.value)}></input>
                    <button className="login-button" onClick={(e) => Submit(e)}>LOGIN</button>
                    {<label className="labelalert">{LoginResponse}</label>}
                   
                    <Link className="btnlink" to="/UserRegistration"><b>New user?Register Now</b></Link>
                </form>
            </div>
        </>
    );
}
--------------------------------------------------------------------------------
User Registration

import { useState } from "react";
import axios from "axios";
import {useNavigate ,Link} from "react-router-dom";


export default function UserRegistration() {
    let navigate = useNavigate();
    const [Name, setName] = useState('');
    const [UserName, setUserName] = useState('');
    const [Email, setEmail] = useState('');
    const [Password, setPassword] = useState('');
    const [CPassword, setCPassword] = useState('');
    const [formErrors, setFormErrors] = useState({});
    const [Allok, setAllok] = useState(false);

    const [isSubmit, setIsSubmit] = useState(false);
    const validate = (out) => {
        const errors = {};
        const regex = /^[^\s@]+@[^\s@]+\.[^\s@]{2,}$/i;
        setAllok(true);
        console.log(Allok);
        if (!out.Name) {
            errors.name = "Name is required!";
            setAllok(false);
        }
        if (!out.UserName) {
            errors.username = "Username is required!";
            setAllok(false);
        }
        if (!out.Email) {
            errors.email = "Email is required!";
            setAllok(false);
        } else if (!regex.test(out.Email)) {
            errors.email = "This is not a valid email format!";
            setAllok(false);
        }
        if (!out.Password) {
            errors.password = "Password is required";
            setAllok(false);
        } else if (out.Password.length < 4) {
            errors.password = "Password must be more than 4 characters";
            setAllok(false);
        } else if (out.Password.length > 10) {
            errors.password = "Password cannot exceed more than 10 characters";
            setAllok(false);
        }
        if (!CPassword.length) {
            errors.cpassword = "Confirm Password is required";
            setAllok(false);
        } else if (out.Password !== CPassword) {
            errors.cpassword = "Password Doesn't match";
            setAllok(false);
        }
        return errors;
    };

    async function Submit(e) {
        e.preventDefault();
        console.log(Allok);
        const out = {
            "Name": Name,
            "UserName": UserName,
            "Email": Email,
            "Password": Password
        };
        setFormErrors(validate(out));
        console.log(Allok);
        console.log(formErrors)
        console.log(out);
        if (Allok) {
            axios.post("http://localhost:24396/api/UserRegistration", out)
                .then(function (response) {
                    console.log(response.data);
                    console.log(response.status);
                    setIsSubmit(true);
                })
                .catch(function (error) {
                    if (error.request.status === 500) {
                        alert("Username already exist")
                    } else {
                        alert(error.message)
                    }
                });
        }
    }
    return (
        <>
            <div className="login">
              
            <form className="user-form">
            <h2>Registration</h2>
                   
                    <div >
                        <label>Name <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.name}</label>}
                    </div>
                    <input required type="text" placeholder="Name" onChange={event => setName(event.target.value)}></input>

                    <div >
                        <label>Username <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.username}</label>}
                    </div>
                    <input required type="text" placeholder="Username" onChange={event => setUserName(event.target.value)}></input>

                    <div >
                        <label>Email <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.email}</label>}
                    </div>

                    <input required type="text" placeholder="Email" onChange={event => setEmail(event.target.value)}></input>
                    <div >
                        <label>Password <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.password}</label>}
                    </div>
                    <input required type="password" placeholder="Password" onChange={event => setPassword(event.target.value)}></input>

                    <div >
                        <label>Confirm Password <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.cpassword}</label>}
                    </div>
                    <input required type="password" placeholder="Confirm Password" onChange={event => setCPassword(event.target.value)}></input>


                    <button className="login-button" onClick={(e) => Submit(e)}>Register</button>
                    <br />
                    <Link  className="btnlink" to="/"><b>Have an account, Login here</b></Link>
                   
                    </form>
                  
            </div>
        </>
    );
}
---------------------------------------------------------------------------
search rooms

import { useState } from "react";
import axios from "axios";
import {useNavigate ,Link} from "react-router-dom";


export default function UserRegistration() {
    let navigate = useNavigate();
    const [Name, setName] = useState('');
    const [UserName, setUserName] = useState('');
    const [Email, setEmail] = useState('');
    const [Password, setPassword] = useState('');
    const [CPassword, setCPassword] = useState('');
    const [formErrors, setFormErrors] = useState({});
    const [Allok, setAllok] = useState(false);

    const [isSubmit, setIsSubmit] = useState(false);
    const validate = (out) => {
        const errors = {};
        const regex = /^[^\s@]+@[^\s@]+\.[^\s@]{2,}$/i;
        setAllok(true);
        console.log(Allok);
        if (!out.Name) {
            errors.name = "Name is required!";
            setAllok(false);
        }
        if (!out.UserName) {
            errors.username = "Username is required!";
            setAllok(false);
        }
        if (!out.Email) {
            errors.email = "Email is required!";
            setAllok(false);
        } else if (!regex.test(out.Email)) {
            errors.email = "This is not a valid email format!";
            setAllok(false);
        }
        if (!out.Password) {
            errors.password = "Password is required";
            setAllok(false);
        } else if (out.Password.length < 4) {
            errors.password = "Password must be more than 4 characters";
            setAllok(false);
        } else if (out.Password.length > 10) {
            errors.password = "Password cannot exceed more than 10 characters";
            setAllok(false);
        }
        if (!CPassword.length) {
            errors.cpassword = "Confirm Password is required";
            setAllok(false);
        } else if (out.Password !== CPassword) {
            errors.cpassword = "Password Doesn't match";
            setAllok(false);
        }
        return errors;
    };

    async function Submit(e) {
        e.preventDefault();
        console.log(Allok);
        const out = {
            "Name": Name,
            "UserName": UserName,
            "Email": Email,
            "Password": Password
        };
        setFormErrors(validate(out));
        console.log(Allok);
        console.log(formErrors)
        console.log(out);
        if (Allok) {
            axios.post("http://localhost:24396/api/UserRegistration", out)
                .then(function (response) {
                    console.log(response.data);
                    console.log(response.status);
                    setIsSubmit(true);
                })
                .catch(function (error) {
                    if (error.request.status === 500) {
                        alert("Username already exist")
                    } else {
                        alert(error.message)
                    }
                });
        }
    }
    return (
        <>
            <div className="login">
              
            <form className="user-form">
            <h2>Registration</h2>
                   
                    <div >
                        <label>Name <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.name}</label>}
                    </div>
                    <input required type="text" placeholder="Name" onChange={event => setName(event.target.value)}></input>

                    <div >
                        <label>Username <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.username}</label>}
                    </div>
                    <input required type="text" placeholder="Username" onChange={event => setUserName(event.target.value)}></input>

                    <div >
                        <label>Email <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.email}</label>}
                    </div>

                    <input required type="text" placeholder="Email" onChange={event => setEmail(event.target.value)}></input>
                    <div >
                        <label>Password <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.password}</label>}
                    </div>
                    <input required type="password" placeholder="Password" onChange={event => setPassword(event.target.value)}></input>

                    <div >
                        <label>Confirm Password <span className="star-important">*</span></label>
                        {<label className="labelalert">{formErrors.cpassword}</label>}
                    </div>
                    <input required type="password" placeholder="Confirm Password" onChange={event => setCPassword(event.target.value)}></input>


                    <button className="login-button" onClick={(e) => Submit(e)}>Register</button>
                    <br />
                    <Link  className="btnlink" to="/"><b>Have an account, Login here</b></Link>
                   
                    </form>
                  
            </div>
        </>
    );
}
--------------------------------------------------------------------------------------
Reservation

import React, { useState } from "react";
import './App.css';
import {Navigation} from './Navigation'

const Reservation= () => {
const [Id,setId] = useState();
const [Name,setName] = useState();
const [Email,setEmail] = useState();
const [PhoneNumber, setPhoneNumber] = useState();
const [Address,setAddress] = useState();
const [IdProof,setIdProof] = useState();
const [RoomType,setRoomType] = useState();
const [NoOfMembers,setNoOfMembers] = useState();
const [CheckIn,setCheckIn] = useState();
const [CheckOut,setCheckOut] = useState(); 
 
  const submitHandler = async (e) => {
    e.preventDefault();
    try{
      fetch("http://localhost:24396/api/Reservation",{
       method: 'POST',
       headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({

        Id : Id,
        Name: Name,
        Email : Email,
        PhoneNumber: PhoneNumber,
        Address : Address,
        IdProof : IdProof,
        RoomType : RoomType,
        NoOfMembers : NoOfMembers,
        CheckIn: CheckIn,
        CheckOut : CheckOut
          
        })
      }).then(() => {
        alert("Reservation Done Successfully");
        console.log('Successful');

      }).error((err)=>{
        alert("Unsuccessful");
      })
      console.log(Id,Name,Email,PhoneNumber,Address,IdProof,RoomType,NoOfMembers,CheckIn,CheckOut);
    }
    catch(error){
      console.log(error);
      
    }
  };
  return (
<div>
<Navigation/>
<div className="boxed">

       <h2>Reservation</h2>    
      <form onSubmit={submitHandler}>
      <section className="flex-row wid100">
      <div className="input-group wid50">
        <label>Id : <span className="star-important">*</span></label> 
        <input
          type="text"
          name="Id"
          value={Id}
          placeholder="Id"
          onChange={(e) => setId(e.target.value)}
          required
        />
       </div>
       <div className="input-group wid50 margin-left5">
        <label>Name : <span className="star-important">*</span></label> 
        <input
          type="text"
          name="Name"
          value={Name}
          placeholder="Name"
          onChange={(e) => setName(e.target.value)}
          required
        />
       </div>
       </section>
       <section className="flex-row wid100">
           <div className="input-group wid50">
        <label>Email : <span className="star-important">*</span></label> 
        <input
          type="text"
          name="Email"
          value={Email}
          placeholder="Email"
          onChange={(e) => setEmail(e.target.value)}
          required
        />
       </div>
       <div className="input-group wid50 margin-left5">
        <label>PhoneNumber <span className="star-important">*</span></label> 
        <input
          type="text"
          name="PhoneNumber"
          value={PhoneNumber}
          placeholder="PhoneNumber"
          onChange={(e) => setPhoneNumber(e.target.value)}
          required
        />
       </div>
       </section>
       <section className="flex-row wid100">
          <div className="input-group wid50">
          <label>Address : <span className="star-important">*</span></label> 
          <input
          type="text"
          name="Address"
          value={Address}
          placeholder="Address"
          onChange={(e) => setAddress(e.target.value)}
          required
          />
          </div>
          <div className="input-group wid50 margin-left5">
          <label>IdProof : <span className="star-important">*</span></label> 
          <input
          type="text"
          name="IdProof"
          value={IdProof}
          placeholder="IdProof"
          onChange={(e) => setIdProof(e.target.value)}
          required
          />
          </div>
        </section>
        <section className="flex-row wid100">
          <div className="input-group wid50">
          <label>RoomType <span className="star-important">*</span></label> 
          <input
          type="text"
          name="RoomType"
          value={RoomType}
          placeholder="RoomType"
          onChange={(e) => setRoomType(e.target.value)}
          required
          />
          </div>
          <div className="input-group wid50 margin-left5">
          <label>NoOfMembers : <span className="star-important">*</span></label>
          <input
          type="text"
          name="NoOfMembers"
          value={NoOfMembers}
          placeholder="NoOfMembers"
          onChange={(e) => setNoOfMembers(e.target.value)} 
          required
         />
         </div>
        </section> 
        <section className="flex-row wid100">
           <div className="input-group wid50">
          <label>CheckIn : <span className="star-important">*</span></label>
          <input
          type="date"
          name="CheckIn"
          placeholder="CheckIn"
          onChange={(e) => setCheckIn(e.target.value)}
          required
          />
          </div>
          <div className="input-group wid50 margin-left5">    
          <label>CheckOut : <span className="star-important">*</span></label>
          <input
         type="date"
         name="CheckOut"
         placeholder="CheckOut"
         onChange={(e) => setCheckOut(e.target.value)}
         required
          />        
          </div>
       </section>
       
       <button onClick={submitHandler} className= "submit-button">Submit</button>
      </form>    
    </div>
</div>
  );
  
};
export default Reservation;

--------------------------------------------------------------------------
Booking


import React, { Component } from 'react'
import {Table} from 'react-bootstrap';
import {Navigation} from './Navigation'
import {Link} from "react-router-dom";

export class Booking extends Component {
    constructor(props) {
        super(props)

        this.state = {setrates:[], addModalShow:false}
    }

    refreshList(){
        fetch("http://localhost:24396/api/booking")
        .then(response=>response.json())
        .then(data=>{
            this.setState({setrates:data});
        });
    }
    componentDidMount(){
        this.refreshList();
    }

    componentDidUpdate(){
        this.refreshList();
    }

    displaymessage(ev) {
        alert("Booking is Successfully Done. Proceed with Resveration.")
    }

    render() {
        const {setrates}=this.state;
        return (
            <form onSubmit={this.displaymessage}>
            <div>
                <Navigation/>
                <Table className="mt-4" striped bordered hover size="sm">
                    <thead>
                        <tr>
                        <th>RoomType</th>
                        <th>Facilities</th>
                        <th>No_of_Adults</th>
                        <th>BasePrice</th>
                        </tr>
                    </thead>
                    <tbody>
                        {setrates.map(setrate=>
                            <tr key={setrate.RoomType}>
                                <td>{setrate.RoomType}</td>
                                <td>{setrate.Facilities}</td>
                                <td>{setrate.No_of_Adults}</td>
                                <td>{setrate.BasePrice}</td>
                                <Link className="btnlink" to="/Reservation"><b>Reserve Rooms</b></Link>
                                {/* <td><button type="submit">Reserve Room</button></td> */}
                            </tr>)}
                    </tbody>
                    </Table>
            </div>
            </form>
        )
    }

}
export default Booking
------------------------------------------------------------------------------------
Add Reservation

import React, { Component } from "react";
import { Modal, Button, Row, Col, Form } from "react-bootstrap";
import "./Reservation.css";

export class AddReservation extends Component {
  constructor(props) {
    super(props);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleSubmit(event) {
    event.preventDefault();
    fetch("http://localhost:24396/api/reservation", {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        Id: event.target.Id.value,
        Name: event.target.Name.value,
        Email: event.target.Email.value,
        PhoneNumber: event.target.PhoneNumber.value,
        Address: event.target.Address.value,
        IdProof: event.target.IdProof.value,
        RoomType : event.target.RoomType.value,
        NoOfMembers: event.target.NoOfMembers.value,
        CheckIn :event.target.CheckIn.value,
        CheckOut : event.target.CheckOut.value,
      }),
    })
      .then((res) => res.json())
      .then(
        (result) => {
          alert(result);
        },
        (error) => {
          alert("Failed");
        }
      );
  }
  render() {
    return (
      <div className="container">
        <Modal
          {...this.props}
          size="lg"
          labelled="contained-modal-title-vcenter"
          centered
        >
          <Modal.Body>
            <Row>
              <Col sm={6}>
                <Form onSubmit={this.handleSubmit}>
                  <Form.Group controlId="Id">
                    <Form.Label>Id : </Form.Label>
                    <Form.Control
                      type="text"
                      name="Id"
                      required
                      placeholder="Id"
                    />
                  </Form.Group>
                  <Form.Group controlId="Name">
                    <Form.Label>Name : </Form.Label>
                    <Form.Control
                      type="text"
                      name="Name"
                      required
                      placeholder="Name"
                    />
                  </Form.Group>
                  <Form.Group controlId="Email">
                    <Form.Label>Email : </Form.Label>
                    <Form.Control
                      type="text"
                      name="Email"
                      required
                      placeholder="Email"
                    />
                  </Form.Group>
                  <Form.Group controlId="PhoneNumber">
                    <Form.Label>PhoneNumber : </Form.Label>
                    <Form.Control
                      type="text"
                      name="PhoneNumber"
                      required
                      placeholder="PhoneNumber"
                    />
                  </Form.Group>
                  <Form.Group controlId="Address">
                    <Form.Label>Address : </Form.Label>
                    <Form.Control
                      type="text"
                      name="Address"
                      required
                      placeholder="Address"
                    />
                  </Form.Group>
                  <Form.Group controlId="IdProof">
                    <Form.Label>IdProof : </Form.Label>
                    <Form.Control
                      type="text"
                      name="IdProof"
                      required
                      placeholder="IdProof"
                    />
                  </Form.Group>
                  <Form.Group controlId="RoomType">
                    <Form.Label>RoomType : </Form.Label>
                    <Form.Control
                      type="text"
                      name="RoomType"
                      required
                      placeholder="RoomType"
                    />
                  </Form.Group>
                  <Form.Group controlId="NoOfMembers">
                    <Form.Label>No.Of Members : </Form.Label>
                    <Form.Control
                      type="text"
                      name="NoOfMembers"
                      required
                      placeholder="NoOfMembers"
                    />
                  </Form.Group>
                  <Form.Group controlId="CheckIn">
                    <Form.Label>CheckIn : </Form.Label>
                    <Form.Control
                      type="date"
                      name="CheckIn"
                      required
                      placeholder="CheckIn"
                    />
                  </Form.Group>
                  <Form.Group controlId="CheckOut">
                    <Form.Label>CheckOut : </Form.Label>
                    <Form.Control
                      type="date"
                      name="CheckOut"
                      required
                      placeholder="CheckOut"
                    />
                  </Form.Group>
          
                  <Form.Group>
                    <Button variant="primary" type="submit">
                      Add
                    </Button>
                  </Form.Group>
                </Form>
              </Col>
            </Row>
          </Modal.Body>

          <Modal.Footer>
            <Button variant="danger" onClick={this.props.onHide}>
              Close
            </Button>
          </Modal.Footer>
        </Modal>
      </div>
    );
  }
}

export default AddReservation;
---------------------------------------------------------------------------------
Payment

import React, { useState } from "react";
import './App.css';
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import {Navigation} from './Navigation'

const Payment= () => {
const [CardHolderName,setCardHolderName] = useState();
const [CardNumber,setCardNumber] = useState();
const [CVV,setCVV] = useState();
  const [startDate, setStartDate] = useState(new Date());
 
  const submitHandler = async (e) => {
    e.preventDefault();
    try{
      let response = await fetch("http://localhost:24396/api/payment", {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({ 
       
        CardHolderName: CardHolderName,
        CardNumber: CardNumber,
        ExpiryDate:startDate,
        CVV: CVV
          
        })
      }).then(() => {
        alert("Card details entered Successfully");
        console.log('Successful');

      }).error((err)=>{
        alert("Unsuccesful");
      })

      console.log(CardHolderName,CardNumber,startDate,CVV);
    }
    catch(error){
      console.log(error);
      
    }
  };
  return (
<div>
<Navigation/>
<div className="boxed">

       <h2>Card Payment</h2>    
      <form onSubmit={submitHandler}>
      <div className="input-group">
        <label>Card Holder Name <span className="star-important">*</span></label> 
        <input
          type="text"
          name="cardname"
          value={CardHolderName}
          placeholder="for eg: Manish Sharma"
          label="cardName"
          onChange={(e) => setCardHolderName(e.target.value)}
          spellCheck ="false"
          required
        />
       </div>
       <div className="input-group">
        <label>Card Number <span className="star-important">*</span></label>
        <input
          type="text"
          name="cardnumber"
          value={CardNumber}
          placeholder="Enter a valid card number"
          label="card number"
          onChange={(e) => setCardNumber(e.target.value)}
          pattern="[\d| ]{16}"
          maxLength={16} 
          required
        />
        </div>    
        <div className="input-group">     
        <label>Expiry Date <span className="star-important">*</span></label>
          <DatePicker className="DatePicker"
          selected={startDate}
          onChange={(date) => setStartDate(date)}
          dateFormat="MM/yyyy"
          showMonthYearPicker></DatePicker>
       </div>
       <div className="input-group">
        <label>CVV <span className="star-important">*</span> </label>
        <input
          type="password"
          name="cvv"
          placeholder="cvv"
          label="CVV"
          value={CVV}
          onChange={(e) => setCVV(e.target.value)}
          pattern="[\d| ]{3}"
          maxLength={3}
         required
        />
       </div>
       <button onClick={submitHandler} className= "submit-button">Submit</button>
      </form>    
    </div>
</div>
  );

  
};
export default Payment;
----------------------------------------------------------------------------
SetRoomRates

import React, { Component } from 'react'
import {Table} from 'react-bootstrap';

import {Button,ButtonToolbar} from 'react-bootstrap';
import {AddSetModal} from './AddSetModal';
import {EditSetModal} from './EditSetModal';

export class SetRoomRates extends Component {
    constructor(props) {
        super(props)

        this.state = {setrates:[], addModalShow:false, editModalShow:false}
    }

    refreshList(){
        fetch("http://localhost:24396/api/setroomrates")
        .then(response=>response.json())
        .then(data=>{
            this.setState({setrates:data});
        });
    }

    componentDidMount(){
        this.refreshList();
    }

    componentDidUpdate(){
        this.refreshList();
    }

    deleteRoom(roomtypeid){
        if(window.confirm('Are you sure?')){
            fetch("http://localhost:24396/api/setroomrates/"+roomtypeid,{
                method:'DELETE',
                header:{'Accept':'application/json',
            'Content-Type':'application/json'}
            })
        }
    }
    render() {
        const {setrates,roomtypeid,roomtype,baseprice}=this.state;
        let addModalClose=()=>this.setState({addModalShow:false});
        let editModalClose=()=>this.setState({editModalShow:false});
        return (
            <div>
                <Table className="mt-4" striped bordered hover size="sm">
                    <thead>
                        <tr>
                        <th>RoomTypeId</th>
                        <th>RoomType</th>
                        <th>BasePrice</th>
                        </tr>
                    </thead>
                    <tbody>
                        {setrates.map(setrate=>
                            <tr key={setrate.RoomTypeId}>
                                <td>{setrate.RoomTypeId}</td>
                                <td>{setrate.RoomType}</td>
                                <td>{setrate.BasePrice}</td>
                                <td>

    <ButtonToolbar>
    <Button className="mr-2" variant="info"
        onClick={()=>this.setState({editModalShow:true,
        roomtypeid:setrate.RoomTypeId,roomtype:setrate.RoomType,baseprice:setrate.BasePrice})}>
            Edit
        </Button>

        <Button className="mr-2" variant="danger"
    onClick={()=>this.deleteRoom(setrate.RoomTypeId)}>
            Delete
        </Button>

        <EditSetModal show={this.state.editModalShow}
        onHide={editModalClose}
        roomtypeid={roomtypeid}
        roomtype={roomtype}
        baseprice={baseprice} />
    </ButtonToolbar>
                            </td>
                            </tr>)}
                    </tbody>
                    </Table>
                    <ButtonToolbar>
                    <Button variant='primary'
                    onClick={()=>this.setState({addModalShow:true})}>
                    Add Rooms</Button>

                    <AddSetModal show={this.state.addModalShow}
                    onHide={addModalClose}/>
                </ButtonToolbar>
            </div>
        )
    }

}
export default SetRoomRates
------------------------------------------------------------------------------
RoomMangement

import React, { Component } from 'react'
import {Table} from 'react-bootstrap';

import {Button,ButtonToolbar} from 'react-bootstrap';
import {AddRoomModal} from './AddRoomModal';
import {EditRoomModal} from './EditRoomModal';

export class RoomManagement extends Component {
    constructor(props) {
        super(props)

        this.state = {rooms:[], addModalShow:false, editModalShow:false}
    }

    refreshList(){
        fetch("http://localhost:24396/api/roommanagement")
        .then(response=>response.json())
        .then(data=>{
            this.setState({rooms:data});
        });
    }

    componentDidMount(){
        this.refreshList();
    }

    componentDidUpdate(){
        this.refreshList();
    }

    deleteRoom(roomno){
        if(window.confirm('Are you sure?')){
            fetch("http://localhost:24396/api/roommanagement/"+roomno,{
                method:'DELETE',
                header:{'Accept':'application/json',
            'Content-Type':'application/json'}
            })
        }
    }
    render() {
        const {rooms,roomno,facilities,adults,roomid}=this.state;
        let addModalClose=()=>this.setState({addModalShow:false});
        let editModalClose=()=>this.setState({editModalShow:false});
        return (
            <div>
                <Table className="mt-4" striped bordered hover size="sm">
                    <thead>
                        <tr>
                        <th>RoomNo</th>
                        <th>Facilities</th>
                        <th>No Of Adults</th>
                        <th>RoomType</th>
                        <th>Options</th>
                        </tr>
                    </thead>
                    <tbody>
                        {rooms.map(room=>
                            <tr key={room.RoomNo}>
                                <td>{room.RoomNo}</td>
                                <td>{room.Facilities}</td>
                                <td>{room.No_Of_Adults}</td>
                                <td>{room.RoomType}</td>
                                <td>

    <ButtonToolbar>
    <Button className="mr-2" variant="info"
        onClick={()=>this.setState({editModalShow:true,
        roomno:room.RoomNo,facilities:room.Facilities,adults:room.No_of_Adults,roomid:room.RoomType})}>
            Edit
        </Button>

        <Button className="mr-2" variant="danger"
        onClick={()=>this.deleteRoom(room.RoomNo)}>
            Delete
        </Button>

        <EditRoomModal show={this.state.editModalShow}
        onHide={editModalClose}
        roomno={roomno}
        facilities={facilities}
        adults={adults}
        roomid={roomid} />
    </ButtonToolbar>
                            </td>
                            </tr>)}
                    </tbody>
                    </Table>
                    <ButtonToolbar>
                    <Button variant='primary'
                    onClick={()=>this.setState({addModalShow:true})}>
                    Room Management</Button>

                    <AddRoomModal show={this.state.addModalShow}
                    onHide={addModalClose}/>
                </ButtonToolbar>
            </div>
        )
    }
}
export default RoomManagement
---------------------------------------------------------------------------------
AddRoomModal

import React,{Component} from 'react';
import {Modal,Button, Row, Col, Form} from 'react-bootstrap';

export class AddRoomModal extends Component{
    constructor(props){
        super(props);
        this.handleSubmit=this.handleSubmit.bind(this);
    }

    handleSubmit(event){
        event.preventDefault();
        fetch("http://localhost:24396/api/roommanagement",{
            method:'POST',
            headers:{
                'Accept':'application/json',
                'Content-Type':'application/json'
            },
            body:JSON.stringify({
                RoomNo:event.target.RoomNo.value,
                Facilities:event.target.Facilities.value,
                No_Of_Adults:event.target.No_Of_Adults.value,
                RoomType:event.target.RoomType.value
            })
        })
        .then(res=>res.json())
        .then((result)=>{
            alert(result);
        },
        (error)=>{
            alert('Failed');
        })
    }
    render(){
        return (
            <div className="container">

<Modal
{...this.props}
size="lg"
aria-labelledby="contained-modal-title-vcenter"
centered
>
    <Modal.Header clooseButton>
        <Modal.Title id="contained-modal-title-vcenter">
            Add Facilities
        </Modal.Title>
    </Modal.Header>
    <Modal.Body>

        <Row>
            <Col sm={6}>
                <Form onSubmit={this.handleSubmit}>

                    <Form.Group controlId="RoomNo">
                        <Form.Label>RoomNo</Form.Label>
                        <Form.Control type="text" name="RoomNo" required 
                        placeholder="RoomNo"/>
                    </Form.Group>

                    <Form.Group controlId="Facilities">
                        <Form.Label>Facilities</Form.Label>
                        <Form.Control type="text" name="Facilities" required 
                        placeholder="Facilities"/>
                    </Form.Group>

                    <Form.Group controlId="No_Of_Adults">
                        <Form.Label>No_Of_Adults</Form.Label>
                        <Form.Control type="text" name="No_Of_Adults" required 
                        placeholder="No_Of_Adults"/>
                    </Form.Group>

                    <Form.Group controlId="RoomType">
                        <Form.Label>RoomType</Form.Label>
                        <Form.Control type="text" name="RoomType" required 
                        placeholder="RoomType"/>
                    </Form.Group>

                    <Form.Group>
                        <Button variant="primary" type="submit">
                            Add Facilities
                        </Button>
                    </Form.Group>
                </Form>
            </Col>
        </Row>
    </Modal.Body>
    
    <Modal.Footer>
        <Button variant="danger" onClick={this.props.onHide}>Close</Button>
    </Modal.Footer>

</Modal>

            </div>
        )
    }

}
---------------------------------------------------------------------------------
AddSetModal

import React,{Component} from 'react';
import {Modal,Button, Row, Col, Form} from 'react-bootstrap';

export class AddSetModal extends Component{
    constructor(props){
        super(props);
        this.handleSubmit=this.handleSubmit.bind(this);
    }

    handleSubmit(event){
        event.preventDefault();
        fetch("http://localhost:24396/api/setroomrates",{
            method:'POST',
            headers:{
                'Accept':'application/json',
                'Content-Type':'application/json'
            },
            body:JSON.stringify({
                RoomTypeId:event.target.RoomTypeId.value,
                RoomType:event.target.RoomType.value,
                BasePrice:event.target.BasePrice.value
            })
        })
        .then(res=>res.json())
        .then((result)=>{
            alert(result);
        },
        (error)=>{
            alert('Failed');
        })
    }
    render(){
        return (
            <div className="container">

<Modal
{...this.props}
size="lg"
aria-labelledby="contained-modal-title-vcenter"
centered
>
    <Modal.Header clooseButton>
        <Modal.Title id="contained-modal-title-vcenter">
            Add Rooms
        </Modal.Title>
    </Modal.Header>
    <Modal.Body>

        <Row>
            <Col sm={6}>
                <Form onSubmit={this.handleSubmit}>

                    <Form.Group controlId="RoomTypeId">
                        <Form.Label>RoomType</Form.Label>
                        <Form.Control type="text" name="RoomTypeId" required 
                        placeholder="RoomTypeId"/>
                    </Form.Group>

                    <Form.Group controlId="RoomType">
                        <Form.Label>RoomType</Form.Label>
                        <Form.Control type="text" name="RoomType" required 
                        placeholder="RoomType"/>
                    </Form.Group>

                    <Form.Group controlId="BasePrice">
                        <Form.Label>BasePrice</Form.Label>
                        <Form.Control type="text" name="BasePrice" required 
                        placeholder="BasePrice"/>
                    </Form.Group>

                    <Form.Group>
                        <Button variant="primary" type="submit">
                            Add Rooms
                        </Button>
                    </Form.Group>
                </Form>
            </Col>
        </Row>
    </Modal.Body>
    
    <Modal.Footer>
        <Button variant="danger" onClick={this.props.onHide}>Close</Button>
    </Modal.Footer>

</Modal>

            </div>
        )
    }

}
------------------------------------------------------------------------------------------
EditRoomModal

import React,{Component} from 'react';
import {Modal,Button, Row, Col, Form} from 'react-bootstrap';

export class EditRoomModal extends Component{
    constructor(props){
        super(props);
        this.handleSubmit=this.handleSubmit.bind(this);
    }

    handleSubmit(event){
        event.preventDefault();
        fetch("http://localhost:24396/api/roommanagement",{
            method:'PUT',
            headers:{
                'Accept':'application/json',
                'Content-Type':'application/json'
            },
            body:JSON.stringify({
                RoomNo:event.target.RoomNo.value,
                Facilities:event.target.Facilities.value,
                No_Of_Adults:event.target.No_Of_Adults.value,
                RoomTypeId:event.target.RoomTypeId.value
            })
        })
        .then(res=>res.json())
        .then((result)=>{
            alert(result);
        },
        (error)=>{
            alert('Failed');
        })
    }
    render(){
        return (
            <div className="container">

<Modal
{...this.props}
size="lg"
aria-labelledby="contained-modal-title-vcenter"
centered
>
    <Modal.Header clooseButton>
        <Modal.Title id="contained-modal-title-vcenter">
            Edit Details
        </Modal.Title>
    </Modal.Header>
    <Modal.Body>

        <Row>
            <Col sm={8}>
                <Form onSubmit={this.handleSubmit}>
                <Form.Group controlId="RoomNo">
                        <Form.Label>RoomNo</Form.Label>
                        <Form.Control type="text" name="RoomNo" required
                        disabled
                        defaultValue={this.props.roomno} 
                        placeholder="RoomNo"/>
                    </Form.Group>

                    <Form.Group controlId="Facilities">
                        <Form.Label>Facilities</Form.Label>
                        <Form.Control type="text" name="Facilities" required 
                        defaultValue={this.props.facilities}
                        placeholder="Facilities"/>
                    </Form.Group>

                    <Form.Group controlId="No_Of_Adults">
                        <Form.Label>No_Of_Adults</Form.Label>
                        <Form.Control type="number" name="No_Of_Adults" required 
                        defaultValue={this.props.adults}
                        placeholder="No_Of_Adults"/>
                    </Form.Group>

                    <Form.Group controlId="RoomTypeId">
                        <Form.Label>RoomTypeId</Form.Label>
                        <Form.Control type="text" name="RoomTypeId" required 
                        defaultValue={this.props.roomid}
                        placeholder="RoomTypeId"/>
                    </Form.Group>

                    <Form.Group>
                        <Button variant="primary" type="submit">
                            Update Room
                        </Button>
                    </Form.Group>
                </Form>
            </Col>
        </Row>
    </Modal.Body>
    
    <Modal.Footer>
        <Button variant="danger" onClick={this.props.onHide}>Close</Button>
    </Modal.Footer>

</Modal>

            </div>
        )
    }
}
------------------------------------------------------------------------------------
EditSetModal

import React,{Component} from 'react';
import {Modal,Button, Row, Col, Form} from 'react-bootstrap';

export class EditSetModal extends Component{
    constructor(props){
        super(props);
        this.handleSubmit=this.handleSubmit.bind(this);
    }

    handleSubmit(event){
        event.preventDefault();
        fetch("http://localhost:24396/api/setroomrates",{
            method:'PUT',
            headers:{
                'Accept':'application/json',
                'Content-Type':'application/json'
            },
            body:JSON.stringify({
                RoomTypeId:event.target.RoomTypeId.value,
                RoomType:event.target.RoomType.value,
                BasePrice:event.target.BasePrice.value
            })
        })
        .then(res=>res.json())
        .then((result)=>{
            alert(result);
        },
        (error)=>{
            alert('Failed');
        })
    }
    render(){
        return (
            <div className="container">

<Modal
{...this.props}
size="lg"
aria-labelledby="contained-modal-title-vcenter"
centered
>
    <Modal.Header clooseButton>
        <Modal.Title id="contained-modal-title-vcenter">
            Edit Rooms
        </Modal.Title>
    </Modal.Header>
    <Modal.Body>

        <Row>
            <Col sm={6}>
                <Form onSubmit={this.handleSubmit}>
                <Form.Group controlId="RoomTypeId">
                        <Form.Label>RoomTypeId</Form.Label>
                        <Form.Control type="text" name="RoomTypeId" required
                        disabled
                        defaultValue={this.props.roomtypeid} 
                        placeholder="RoomTypeId"/>
                    </Form.Group>

                    <Form.Group controlId="RoomType">
                        <Form.Label>RoomType</Form.Label>
                        <Form.Control type="text" name="RoomType" required 
                        defaultValue={this.props.roomtype}
                        placeholder="RoomType"/>
                    </Form.Group>

                    <Form.Group controlId="BasePrice">
                        <Form.Label>BasePrice</Form.Label>
                        <Form.Control type="text" name="BasePrice" required 
                        defaultValue={this.props.baseprice}
                        placeholder="BasePrice"/>
                    </Form.Group>

                    <Form.Group>
                        <Button variant="primary" type="submit">
                            Update Room
                        </Button>
                    </Form.Group>
                </Form>
            </Col>
        </Row>
    </Modal.Body>
    
    <Modal.Footer>
        <Button variant="danger" onClick={this.props.onHide}>Close</Button>
    </Modal.Footer>

</Modal>

            </div>
        )
    }
}
---------------------------------------------------------------------------------------------
App.css
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.main-heading{
position: relative;

  width: 100%;
  color: #f1f1f1;
  margin: auto;
 

}
.color-white{
  color: white;
}
.image {

background-image:
linear-gradient(to bottom, rgba(79, 79, 79, 0.52), rgba(34, 33, 33, 0.73)),
url(
"https://assets.hyatt.com/content/dam/hyatt/hyattdam/images/2022/04/12/1329/MUMGH-P0765-Inner-Courtyard-Hotel-Exterior-Evening.jpg/MUMGH-P0765-Inner-Courtyard-Hotel-Exterior-Evening.16x9.jpg"); 

background-size: "fit";
  height: 100vh;
  
  font-size:20px;
  background-repeat:no-repeat; 
  background-color: grey;
}

.Color{
  color: yellow;
}

.mt-4{
  color: white;
}
.text{
  color:black;
}
.search{
  height: auto;
  width:400px;
  padding:5px;
  display: flex;
  flex-direction: column;
border-radius: 10px;
position: relative;
margin: 10px auto;
box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
padding: 10px;
background-color: white; 
}

.btnlink{
  font-size: 0.9rem;
  font-weight: 400 !important;

  margin: 0px auto !important;
 
  width: fit-content;
  color:rgb(13, 118, 205);
}

h1{
  text-align: center;
  margin-top: 100px;
  color : rgb(224, 224, 229);
}
.boxed {
  /* border: 9px solid green ; */
  height: auto;
  width:400px;
  padding:5px;
  display: flex;
  flex-direction: column;
border-radius: 10px;
position: relative;
margin: 10px auto;
box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
padding: 10px;
background-color: white; 
}

.boxed h2{
  text-align: center;
  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  color: #0a719a;
  margin-bottom: 0.7rem;
}
form{
  width: 100%;
  display :flex;
  flex-direction: column;

}
form .input-group{
  width :100%;
  display: flex;
justify-content: flex-end ;
margin: 5px 0px;
}
form .input-group label{
  width :100%;
  align-items: center;
  display: flex;
  font-size: 0.8rem;
  font-weight: 700;
  color:rgb(109, 109, 109);
  margin-bottom: 0.3rem !important;
}

form .input-group input{
  width :100%;
  height:auto;
  padding: 8px !important;
  font-size: 0.9rem;
  border-radius: 5px;
  outline-color: #0996CE;
  outline-width: 1px;
  border: none;
  background-color: #f1f1f1;
  margin-top: 0px !important;
  margin-bottom: 0.3rem !important;
}
form div .react-datepicker__input-container .DatePicker{
width :100%
}
.react-datepicker__input-container {

  display: flex !important;
  justify-content: flex-end;
  width: 70%;
}
.submit-button{
width: 100px;
padding: 10px;
margin: 20px auto;
background-color: #0996CE;
border: none;
color :white;
border-radius: 10px;
transition:all 0.5s ease;
align-content: center;

}
.submit-button:hover{
  filter:brightness(1.2);
  width : 110px;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
body{
  /* background: url(./cardimage.jpg) no-repeat center; */
  /* background-size: cover; */
  width :100vw;
  height :100vh;
  overflow-x :hidden;
  overflow-y: auto;
  
}
/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}
.gallery-images{
  width: 100%;
 
  
  display: flex;
  justify-content: center;
  align-items: center;
}
.gallery-images .gallery-images-segment{
  width: calc(100% / 3);
  height: 200px;
  margin: 0px 5px;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.gallery-images-segment:nth-child(1){
  background-image: url(./images/hotel1.jpg);
}
.gallery-images-segment:nth-child(2){
  background-image: url(./images/hotel2.jpg);
}
.gallery-images-segment:nth-child(3){
  background-image: url(./images/hotel3.jpg);

}
.hometext{
  color:rgb(218, 218, 218);
  background-color: #a3a3a342;
  padding:10px;
  margin-top: 20px;
  border-radius: 10px;
  
}
.login{
  width:300px;
  height:auto;
  padding:10px;
  overflow: hidden;
  background-color: white;
  position: absolute;
  left: 50%;
  top: 50%;
  border-radius: 20px;
  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  transform: translate(-50%,-50%);
  margin-top: 1.3rem;
}
.login .user-form{
 width: 100% !important;
  display:flex;
  flex-direction: column;
  padding: 5px;
}
.user-form h2{
  color:grey;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  margin-bottom: 15px;
}
.user-form input{
  padding: 5px !important;
  width: 95% !important;
  margin-top: 0px !important;
  margin-bottom: 15px !important;
  box-sizing: unset !important;
  background-color: #ebebeb;
  font-size: 0.9rem !important;
  border: 1px solid rgb(185, 185, 185) !important;
  outline-color: #0996CE;
  outline-width: 1px !important;
}

.star-important{
  color: red;
  margin-left: 0.2rem;
}
.user-form div{
  display: flex;
}
.user-form div label{
  font-size: 0.9rem;
  color: rgb(121, 121, 121);
  font-weight: 700;
}
/* .Userform { */
  /* border: 9px solid green ; */
  /* height:fit-content;
  width:200px;
  padding:1px;
  display:grid;
  flex-direction: column;
justify-content:end;
position: absolute;
left: 50%;
top: 50%; */
/* transform: translate(-50%, -50%); */
/* border: 2px solid #a5a5a4; */
/* box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px; */
/* background-color: #d4d4d4; */
/* } */

.login-button{
  border: none;
  padding:5px;
  width:50%;
  background-color: #0996CE;
  color: white;
  border-radius: 10px;
  margin: 10px auto;
  transition: all 0.5s;
}
.login-button:hover{
  filter: brightness(1.2);
  width: 60%;
}


.flex-row{
  display: flex;
}
.margin-left5{
  margin: 5px !important;
}
.wid100{
  width: 100% !important;
}
.wid50{
  width: 50% !important;
}
.wid700{
  width: 700px !important;
}
-------------------------------------------------------------

--------------------------------------------------------------------------------------------------